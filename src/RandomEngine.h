/*
 * This file is a part of the Sharemind framework.
 * Copyright (C) Cybernetica AS
 *
 * All rights are reserved. Reproduction in whole or part is prohibited
 * without the written consent of the copyright owner. The usage of this
 * code is subject to the appropriate license agreement.
 */

#ifndef SHAREMINDCOMMON_RANDOMENGINE_H
#define SHAREMINDCOMMON_RANDOMENGINE_H

#include "common/Logger/Logger.h"

namespace sharemind {

/**
 * The randomness engine types available in the code.
 */
enum RandomEngineType {
	/*! An engine based on the SNOW2 stream cipher */
	RNG_SNOW2,
	/*! An engine based on the OpenSSL RAND_bytes function */
	RNG_OPENSSL
};

/**
 * This class is an abstract randomness generator
 */
class RandomEngine {
public: /* Methods: */

    RandomEngine (Logger& logger)
        : m_logger (logger)
    { }

    virtual ~RandomEngine() = 0;

    virtual void Seed() = 0;

    /**
     * \brief Fills memory with randomly generated bytes.
     * \param[in] memptr pointer to memory to fill
     * \param[in] size number of bytes to fill
     */
    virtual void fillBytes (void* memptr, size_t size) = 0;

protected: /* Fields: */
    Logger& m_logger;
};

} // namespace sharemind

#endif // SHAREMINDCOMMON_RANDOMENGINE_H
